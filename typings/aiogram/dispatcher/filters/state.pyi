"""
This type stub file was generated by pyright.
"""

from typing import Optional

class State:
    """
    State object
    """
    def __init__(self, state: , = ..., group_name: , = ...) -> None:
        ...
    
    @property
    def group(self):
        ...
    
    def get_root(self):
        ...
    
    @property
    def state(self):
        ...
    
    def set_parent(self, group):
        ...
    
    def __set_name__(self, owner, name):
        ...
    
    def __str__(self) -> str:
        ...
    
    __repr__ = ...
    async def set(self):
        ...
    


class StatesGroupMeta(type):
    def __new__(mcs, name, bases, namespace, **kwargs):
        ...
    
    @property
    def __group_name__(cls) -> str:
        ...
    
    @property
    def __full_group_name__(cls) -> str:
        ...
    
    @property
    def states(cls) -> tuple:
        ...
    
    @property
    def childs(cls) -> tuple:
        ...
    
    @property
    def all_childs(cls):
        ...
    
    @property
    def all_states(cls):
        ...
    
    @property
    def all_states_names(cls):
        ...
    
    @property
    def states_names(cls) -> tuple:
        ...
    
    def get_root(cls):
        ...
    
    def __contains__(cls, item):
        ...
    
    def __str__(self) -> str:
        ...
    


class StatesGroup(metaclass=StatesGroupMeta):
    @classmethod
    async def next(cls) -> str:
        ...
    
    @classmethod
    async def previous(cls) -> str:
        ...
    
    @classmethod
    async def first(cls) -> str:
        ...
    
    @classmethod
    async def last(cls) -> str:
        ...
    


default_state = State()
any_state = State(state='*')
